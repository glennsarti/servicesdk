// Code generated by protoc-gen-go. DO NOT EDIT.
// source: servicepb/service.proto

/*
Package servicepb is a generated protocol buffer package.

It is generated from these files:
	servicepb/service.proto

It has these top-level messages:
	MetadataResponse
	InvokeRequest
	MetadataRequest
*/
package servicepb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import puppet_datapb "github.com/puppetlabs/data-protobuf/datapb"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MetadataResponse struct {
	Typeset     *puppet_datapb.Data `protobuf:"bytes,1,opt,name=typeset" json:"typeset,omitempty"`
	Definitions *puppet_datapb.Data `protobuf:"bytes,2,opt,name=definitions" json:"definitions,omitempty"`
}

func (m *MetadataResponse) Reset()                    { *m = MetadataResponse{} }
func (m *MetadataResponse) String() string            { return proto.CompactTextString(m) }
func (*MetadataResponse) ProtoMessage()               {}
func (*MetadataResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *MetadataResponse) GetTypeset() *puppet_datapb.Data {
	if m != nil {
		return m.Typeset
	}
	return nil
}

func (m *MetadataResponse) GetDefinitions() *puppet_datapb.Data {
	if m != nil {
		return m.Definitions
	}
	return nil
}

type InvokeRequest struct {
	Identifier string              `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	Method     string              `protobuf:"bytes,2,opt,name=method" json:"method,omitempty"`
	Arguments  *puppet_datapb.Data `protobuf:"bytes,3,opt,name=arguments" json:"arguments,omitempty"`
}

func (m *InvokeRequest) Reset()                    { *m = InvokeRequest{} }
func (m *InvokeRequest) String() string            { return proto.CompactTextString(m) }
func (*InvokeRequest) ProtoMessage()               {}
func (*InvokeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *InvokeRequest) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *InvokeRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *InvokeRequest) GetArguments() *puppet_datapb.Data {
	if m != nil {
		return m.Arguments
	}
	return nil
}

type MetadataRequest struct {
}

func (m *MetadataRequest) Reset()                    { *m = MetadataRequest{} }
func (m *MetadataRequest) String() string            { return proto.CompactTextString(m) }
func (*MetadataRequest) ProtoMessage()               {}
func (*MetadataRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*MetadataResponse)(nil), "puppet.service.MetadataResponse")
	proto.RegisterType((*InvokeRequest)(nil), "puppet.service.InvokeRequest")
	proto.RegisterType((*MetadataRequest)(nil), "puppet.service.MetadataRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DefinitionService service

type DefinitionServiceClient interface {
	Invoke(ctx context.Context, in *InvokeRequest, opts ...grpc.CallOption) (*puppet_datapb.Data, error)
	Metadata(ctx context.Context, in *MetadataRequest, opts ...grpc.CallOption) (*MetadataResponse, error)
}

type definitionServiceClient struct {
	cc *grpc.ClientConn
}

func NewDefinitionServiceClient(cc *grpc.ClientConn) DefinitionServiceClient {
	return &definitionServiceClient{cc}
}

func (c *definitionServiceClient) Invoke(ctx context.Context, in *InvokeRequest, opts ...grpc.CallOption) (*puppet_datapb.Data, error) {
	out := new(puppet_datapb.Data)
	err := grpc.Invoke(ctx, "/puppet.service.DefinitionService/Invoke", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *definitionServiceClient) Metadata(ctx context.Context, in *MetadataRequest, opts ...grpc.CallOption) (*MetadataResponse, error) {
	out := new(MetadataResponse)
	err := grpc.Invoke(ctx, "/puppet.service.DefinitionService/Metadata", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DefinitionService service

type DefinitionServiceServer interface {
	Invoke(context.Context, *InvokeRequest) (*puppet_datapb.Data, error)
	Metadata(context.Context, *MetadataRequest) (*MetadataResponse, error)
}

func RegisterDefinitionServiceServer(s *grpc.Server, srv DefinitionServiceServer) {
	s.RegisterService(&_DefinitionService_serviceDesc, srv)
}

func _DefinitionService_Invoke_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InvokeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefinitionServiceServer).Invoke(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/puppet.service.DefinitionService/Invoke",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefinitionServiceServer).Invoke(ctx, req.(*InvokeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DefinitionService_Metadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MetadataRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DefinitionServiceServer).Metadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/puppet.service.DefinitionService/Metadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DefinitionServiceServer).Metadata(ctx, req.(*MetadataRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DefinitionService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "puppet.service.DefinitionService",
	HandlerType: (*DefinitionServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Invoke",
			Handler:    _DefinitionService_Invoke_Handler,
		},
		{
			MethodName: "Metadata",
			Handler:    _DefinitionService_Metadata_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "servicepb/service.proto",
}

func init() { proto.RegisterFile("servicepb/service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x92, 0xcb, 0x4e, 0xf3, 0x30,
	0x10, 0x85, 0xdb, 0xff, 0x97, 0x0a, 0x9d, 0x8a, 0x4b, 0x8d, 0x04, 0x51, 0x24, 0xa0, 0xca, 0x8a,
	0x4d, 0x6c, 0x51, 0xc4, 0x96, 0x05, 0xea, 0x86, 0x05, 0x42, 0x0a, 0x3b, 0x76, 0x49, 0x33, 0x4d,
	0xad, 0x12, 0xdb, 0xc4, 0x93, 0x0a, 0x78, 0x1e, 0x1e, 0x14, 0x25, 0x4e, 0xaf, 0x22, 0xab, 0xc4,
	0xa3, 0xef, 0xcc, 0x39, 0x9e, 0x31, 0x5c, 0x58, 0x2c, 0x96, 0x72, 0x8a, 0x26, 0x11, 0xcd, 0x1f,
	0x37, 0x85, 0x26, 0xcd, 0x8e, 0x4d, 0x69, 0x0c, 0x12, 0x6f, 0xaa, 0xfe, 0x30, 0x8d, 0x29, 0x36,
	0x89, 0xa8, 0x3e, 0x0e, 0x09, 0x3e, 0xe1, 0xf4, 0x19, 0x29, 0xae, 0x2a, 0x11, 0x5a, 0xa3, 0x95,
	0x45, 0x16, 0xc2, 0x01, 0x7d, 0x19, 0xb4, 0x48, 0x5e, 0x77, 0xd4, 0xbd, 0x19, 0x8c, 0xcf, 0x78,
	0xd3, 0xc8, 0xe9, 0xf9, 0xa4, 0xa2, 0x57, 0x0c, 0xbb, 0x87, 0x41, 0x8a, 0x33, 0xa9, 0x24, 0x49,
	0xad, 0xac, 0xf7, 0xaf, 0x5d, 0xb2, 0xcd, 0x05, 0xdf, 0x70, 0xf4, 0xa4, 0x96, 0x7a, 0x81, 0x11,
	0x7e, 0x94, 0x68, 0x89, 0x5d, 0x01, 0xc8, 0x14, 0x15, 0xc9, 0x99, 0xc4, 0xa2, 0x76, 0xee, 0x47,
	0x5b, 0x15, 0x76, 0x0e, 0xbd, 0x1c, 0x69, 0xae, 0xd3, 0xda, 0xa2, 0x1f, 0x35, 0x27, 0x76, 0x0b,
	0xfd, 0xb8, 0xc8, 0xca, 0x1c, 0x15, 0x59, 0xef, 0x7f, 0xbb, 0xfb, 0x86, 0x0a, 0x86, 0x70, 0xb2,
	0xb9, 0x75, 0xed, 0x3e, 0xfe, 0xe9, 0xc2, 0x70, 0xb2, 0x8e, 0xf7, 0xea, 0x26, 0xc6, 0x1e, 0xa0,
	0xe7, 0x42, 0xb2, 0x4b, 0xbe, 0x3b, 0x4c, 0xbe, 0x13, 0xde, 0xff, 0xcb, 0x31, 0xe8, 0xb0, 0x17,
	0x38, 0x5c, 0x19, 0xb1, 0xeb, 0xfd, 0x0e, 0x7b, 0x11, 0xfc, 0x51, 0x3b, 0xe0, 0x36, 0x13, 0x74,
	0x1e, 0xc5, 0x5b, 0x98, 0x49, 0x9a, 0x97, 0x09, 0x9f, 0xea, 0x5c, 0x38, 0xfe, 0x3d, 0x4e, 0xac,
	0xc8, 0x74, 0xd8, 0xc8, 0x6c, 0xba, 0x10, 0xeb, 0x17, 0x91, 0xf4, 0xea, 0x3d, 0xdf, 0xfd, 0x06,
	0x00, 0x00, 0xff, 0xff, 0xa5, 0xe9, 0x23, 0x18, 0x25, 0x02, 0x00, 0x00,
}
